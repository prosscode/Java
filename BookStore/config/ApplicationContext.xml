<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd"	>
        
        <!-- 扫描service层所有 -->
        <context:component-scan base-package="service"></context:component-scan>
        
        <!-- 托管mybatis的jdbc和配置文件 -->
        <!-- 1.创建数据源 -->
        	<!-- 加载jdbc配置文件 -->
        	<context:property-placeholder location="classpath:jdbc.properties"/>
        	<bean id="ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        		<property name="driverClassName" value="${driver}" />
        		<property name="url" value="${url}"/>
        		<property name="username" value="${user}"/>
        		<property name="password" value="${password}"/>
        	</bean>
        <!-- 2.创建sqlsessionFactory 加载mybatis文件-->
        	<bean id="ssf" class="org.mybatis.spring.SqlSessionFactoryBean">
        		<property name="dataSource" ref="ds" />
        		<property name="configLocation" value="classpath:Mybatis.xml"/>
        	</bean>
        <!-- 3.创建mapper代理  批量创建-->
            <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        		<property name="sqlSessionFactoryBeanName" value="ssf"></property>
        		<property name="basePackage" value="mapper"></property>
        	</bean>
        <!-- 4.声明事务 -->
        	<!-- 4.1 配置事务管理器 -->
        	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        		<property name="dataSource" ref="ds"></property>
        	</bean>
        	<!-- 4.2 配置事务策略 -->
        	<tx:advice id="txAdvice" transaction-manager="txManager">
 				<tx:attributes>
 					<tx:method name="query*" read-only="true"/>
 					<tx:method name="find*" read-only="true"/>
 					<tx:method name="insert*" propagation="REQUIRED"/>
 					<tx:method name="update*" propagation="REQUIRED"/>
 					<tx:method name="delete*" propagation="REQUIRED"/>
 				</tx:attributes>
 			</tx:advice>
 			<!-- 4.3 织入事务 -->
 			<aop:config>
 				<aop:pointcut expression="execution(* service..*(..))" id="pointCut"/>
 				<aop:advisor advice-ref="txAdvice" pointcut-ref="pointCut"/>
 			</aop:config>
        </beans>

        